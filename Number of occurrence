// C++ CODE

    int countFreq(vector<int>& arr, int target) {
        // code here
        int n = arr.size(), low=0, mid=0, high=n-1,firstIndex=-1, lastIndex=-1;
        for(int i=0;i<2;i++){
            low=0,high=n-1;
            while(low<=high){
                mid=(low+high)/2;
                if(arr[mid]==target){
                    if(i==0){
                        firstIndex=mid;
                        high=mid-1;
                    }
                    else{
                        lastIndex=mid;
                        low=mid+1;
                    }
                }
                else if(arr[mid]>target)high=mid-1;
                else low=mid+1;
            }
        }
        if(firstIndex==-1)return 0;
        return lastIndex-firstIndex+1;
    }


// JAVA CODE

    int countFreq(int[] arr, int target) {
        // code here
        int n=arr.length,low=0,mid=0,high=n-1,firstIndex=-1,lastIndex=-1;
        for(int i=0;i<2;i++){
            low=0;
            high=n-1;
            while(low<=high){
                mid=(low+high)/2;
                if(arr[mid]==target){
                    if(i==0){
                        firstIndex=mid;
                        high=mid-1;
                    }
                    else{
                        lastIndex=mid;
                        low=mid+1;
                    }
                }
                else if(arr[mid]>target)high=mid-1;
                else low=mid+1;
            }
        }
        if(firstIndex==-1)return 0;
        return lastIndex-firstIndex+1;
    }


// Time Complexity:- O(LogN)
// Space Complexity:- O(1)
