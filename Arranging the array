// JAVA CODE
//Slightly better looking code

static void swap(int arr[], int i, int j) {
		while (i < j) {
			int t = arr[i];
			arr[i] = arr[j];
			arr[j] = t;
			i++;
			j--;
		}
	}
	static void merge(int arr[], int start, int mid, int end) {
		int i = start;
		while (i <= mid && arr[i] < 0)
			i++;// in first part the first positive index
		int j = mid + 1;
		while (j <= end && arr[j] < 0)
			j++;// in second part the positive positive index

		swap(arr, i, mid);

		swap(arr, mid + 1, j - 1);
		swap(arr, i, j - 1);
	}

	static void mergesort(int arr[], int start, int end) {
		if (start < end) {
			int mid = (start + end) >> 2;
			mergesort(arr, start, mid);
			mergesort(arr, mid + 1, end);
			merge(arr, start, mid, end);
		}
	}

	public void Rearrange(int a[], int n) {
		mergesort(a, 0, n - 1);
	}
