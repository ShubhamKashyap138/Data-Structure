// C++ CODE

    int maxSubarraySum(vector<int> &arr) {
        // code here...
        int sum=0,ans=INT_MIN,n=arr.size();
        for(int i=0;i<n;i++){
            sum+=arr[i];
            ans=max(ans,sum);
            if(sum<0)sum=0;
        }
        return ans;
    }


// JAVA CODE

    int maxSubarraySum(int[] arr) {

        // Your code here
        int sum=0,ans=Integer.MIN_VALUE,n=arr.length;
        for(int i=0;i<n;i++){
            sum+=arr[i];
            ans=Math.max(ans,sum);
            if(sum<0)sum=0;
        }
        return ans;
    }


// Time Complexity:- O(N)
// Space Complexity:- O(1)
